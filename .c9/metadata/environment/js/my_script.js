{"filter":false,"title":"my_script.js","tooltip":"/js/my_script.js","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":51,"column":4},"end":{"row":65,"column":5},"action":"insert","lines":[" this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }"],"id":1968}],[{"start":{"row":65,"column":5},"end":{"row":66,"column":0},"action":"insert","lines":["",""],"id":1969},{"start":{"row":66,"column":0},"end":{"row":66,"column":4},"action":"insert","lines":["    "]},{"start":{"row":66,"column":4},"end":{"row":66,"column":5},"action":"insert","lines":["}"]}],[{"start":{"row":66,"column":4},"end":{"row":66,"column":5},"action":"remove","lines":["}"],"id":1970}],[{"start":{"row":80,"column":0},"end":{"row":80,"column":1},"action":"remove","lines":["}"],"id":1971}],[{"start":{"row":0,"column":0},"end":{"row":124,"column":0},"action":"remove","lines":["","","class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","const cards = document.querySelectorAll('.card');","","","let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');","     this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} ","    //second click","    hasFlippedCard=false;","    secondCard=this;","    ","   ","     checkForMatch();","","","","function checkForMatch(){","  let isMatch =  firstCard.dataset.framework ===","   secondCard.dataset.framework;","   isMatch ? disablCards() : unflipCards();","   ","   ","function disablCards(){","     firstCard.removeEventListener('click', flipCard);","       secondCard.removeEventListener('click',flipCard);","        resetBoard();","}","function unflipCards(){","    lockBoard= true;","    setTimeout(()=>{","        firstCard.classList.remove('visible');","    secondCard.classList.remove('visible');","    lockBoard =false;","    resetBoard();","},1500);","    } ","}","function resetBoard(){","    [hasFlippedCard,lockBoard]=[false,false];","    [firstCard,secondCard]=[null,null];","}","","","(function shuffle(){","    cards.forEach(card=>{","        let randomPos = Math.floor(Math.random() *12);","        card.style.order= randomPos;","    });","})();","","    ","    ","    cards.forEach(card => card.addEventListener('click',flipCard));","","","","","",""],"id":1972}],[{"start":{"row":0,"column":0},"end":{"row":182,"column":3},"action":"insert","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   "],"id":1973}],[{"start":{"row":0,"column":0},"end":{"row":182,"column":3},"action":"remove","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   "],"id":1974},{"start":{"row":0,"column":0},"end":{"row":182,"column":3},"action":"insert","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   "]}],[{"start":{"row":7,"column":32},"end":{"row":7,"column":33},"action":"remove","lines":["5"],"id":1975}],[{"start":{"row":7,"column":32},"end":{"row":7,"column":33},"action":"insert","lines":["6"],"id":1976}],[{"start":{"row":25,"column":13},"end":{"row":25,"column":20},"action":"remove","lines":["victory"],"id":1977},{"start":{"row":25,"column":13},"end":{"row":25,"column":14},"action":"insert","lines":["w"]},{"start":{"row":25,"column":14},"end":{"row":25,"column":15},"action":"insert","lines":["i"]},{"start":{"row":25,"column":15},"end":{"row":25,"column":16},"action":"insert","lines":["n"]},{"start":{"row":25,"column":16},"end":{"row":25,"column":17},"action":"insert","lines":["n"]},{"start":{"row":25,"column":17},"end":{"row":25,"column":18},"action":"insert","lines":["e"]},{"start":{"row":25,"column":18},"end":{"row":25,"column":19},"action":"insert","lines":["r"]}],[{"start":{"row":0,"column":0},"end":{"row":182,"column":3},"action":"remove","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.6;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.winnerSound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   "],"id":1978},{"start":{"row":0,"column":0},"end":{"row":115,"column":0},"action":"insert","lines":["const cards = document.querySelectorAll('.card');","","","let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');"," ","        ","  ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} ","    //second click","    hasFlippedCard=false;","    secondCard=this;","    ","   ","     checkForMatch();","","}","","function checkForMatch(){","  let isMatch =  firstCard.dataset.framework ===","   secondCard.dataset.framework;","   isMatch ? disablCards() : unflipCards();","   ","   ","function disablCards(){","     firstCard.removeEventListener('click', flipCard);","       secondCard.removeEventListener('click',flipCard);","        resetBoard();","}","function unflipCards(){","    lockBoard= true;","    setTimeout(()=>{","        firstCard.classList.remove('visible');","    secondCard.classList.remove('visible');","    lockBoard =false;","    resetBoard();","},1500);","    } ","}","function resetBoard(){","    [hasFlippedCard,lockBoard]=[false,false];","    [firstCard,secondCard]=[null,null];","}","","","(function shuffle(){","    cards.forEach(card=>{","        let randomPos = Math.floor(Math.random() *12);","        card.style.order= randomPos;","    });","})();","","function play() {","        var audio = document.getElementById('audio');","        if (audio.paused) {","            audio.play();","            ('#play').removeClass('glyphicon-play-circle');","            ('#play').addClass('glyphicon-pause');","        }else{","            audio.pause();","            audio.currentTime = 0;","            ('assets/audio/game background music.mp3').addClass('glyphicon-play-circle');","            ('#play').removeClass('glyphicon-pause');","        }","    }","","document.getElementById('timer').innerHTML =","  003 + \":\" + 20;","startTimer();","","function startTimer() {","  var presentTime = document.getElementById('timer').innerHTML;","  var timeArray = presentTime.split(/[:]+/);","  var m = timeArray[0];","  var s = checkSecond((timeArray[1] - 1));","  if(s==59){m=m-1}","  //if(m<0){alert('times up')}","  ","  document.getElementById('timer').innerHTML =","   \":\" + s;","  console.log(s)","  setTimeout(startTimer, 1000);","}","","function checkSecond(sec) {","  if (sec < 10 && sec >= 0) {sec = \"0\" + sec}; // add zero in front of numbers < 10","  if (sec < 0) { \"flipCard\"};","  return sec;","}","","    ","    ","    cards.forEach(card => card.addEventListener('click',flipCard));","","","","","","","","","","",""]}],[{"start":{"row":2,"column":0},"end":{"row":145,"column":1},"action":"insert","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}"],"id":1979}],[{"start":{"row":0,"column":0},"end":{"row":258,"column":0},"action":"remove","lines":["const cards = document.querySelectorAll('.card');","","class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');"," ","        ","  ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} ","    //second click","    hasFlippedCard=false;","    secondCard=this;","    ","   ","     checkForMatch();","","}","","function checkForMatch(){","  let isMatch =  firstCard.dataset.framework ===","   secondCard.dataset.framework;","   isMatch ? disablCards() : unflipCards();","   ","   ","function disablCards(){","     firstCard.removeEventListener('click', flipCard);","       secondCard.removeEventListener('click',flipCard);","        resetBoard();","}","function unflipCards(){","    lockBoard= true;","    setTimeout(()=>{","        firstCard.classList.remove('visible');","    secondCard.classList.remove('visible');","    lockBoard =false;","    resetBoard();","},1500);","    } ","}","function resetBoard(){","    [hasFlippedCard,lockBoard]=[false,false];","    [firstCard,secondCard]=[null,null];","}","","","(function shuffle(){","    cards.forEach(card=>{","        let randomPos = Math.floor(Math.random() *12);","        card.style.order= randomPos;","    });","})();","","function play() {","        var audio = document.getElementById('audio');","        if (audio.paused) {","            audio.play();","            ('#play').removeClass('glyphicon-play-circle');","            ('#play').addClass('glyphicon-pause');","        }else{","            audio.pause();","            audio.currentTime = 0;","            ('assets/audio/game background music.mp3').addClass('glyphicon-play-circle');","            ('#play').removeClass('glyphicon-pause');","        }","    }","","document.getElementById('timer').innerHTML =","  003 + \":\" + 20;","startTimer();","","function startTimer() {","  var presentTime = document.getElementById('timer').innerHTML;","  var timeArray = presentTime.split(/[:]+/);","  var m = timeArray[0];","  var s = checkSecond((timeArray[1] - 1));","  if(s==59){m=m-1}","  //if(m<0){alert('times up')}","  ","  document.getElementById('timer').innerHTML =","   \":\" + s;","  console.log(s)","  setTimeout(startTimer, 1000);","}","","function checkSecond(sec) {","  if (sec < 10 && sec >= 0) {sec = \"0\" + sec}; // add zero in front of numbers < 10","  if (sec < 0) { \"flipCard\"};","  return sec;","}","","    ","    ","    cards.forEach(card => card.addEventListener('click',flipCard));","","","","","","","","","","",""],"id":1980},{"start":{"row":0,"column":0},"end":{"row":182,"column":3},"action":"insert","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   "]}],[{"start":{"row":182,"column":3},"end":{"row":183,"column":0},"action":"insert","lines":["",""],"id":1981},{"start":{"row":183,"column":0},"end":{"row":183,"column":3},"action":"insert","lines":["   "]},{"start":{"row":183,"column":3},"end":{"row":184,"column":0},"action":"insert","lines":["",""]},{"start":{"row":184,"column":0},"end":{"row":184,"column":3},"action":"insert","lines":["   "]},{"start":{"row":184,"column":3},"end":{"row":185,"column":0},"action":"insert","lines":["",""]},{"start":{"row":185,"column":0},"end":{"row":185,"column":3},"action":"insert","lines":["   "]},{"start":{"row":185,"column":3},"end":{"row":186,"column":0},"action":"insert","lines":["",""]},{"start":{"row":186,"column":0},"end":{"row":186,"column":3},"action":"insert","lines":["   "]},{"start":{"row":186,"column":3},"end":{"row":187,"column":0},"action":"insert","lines":["",""]},{"start":{"row":187,"column":0},"end":{"row":187,"column":3},"action":"insert","lines":["   "]}],[{"start":{"row":187,"column":3},"end":{"row":302,"column":0},"action":"insert","lines":["const cards = document.querySelectorAll('.card');","","","let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');"," ","        ","  ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} ","    //second click","    hasFlippedCard=false;","    secondCard=this;","    ","   ","     checkForMatch();","","}","","function checkForMatch(){","  let isMatch =  firstCard.dataset.framework ===","   secondCard.dataset.framework;","   isMatch ? disablCards() : unflipCards();","   ","   ","function disablCards(){","     firstCard.removeEventListener('click', flipCard);","       secondCard.removeEventListener('click',flipCard);","        resetBoard();","}","function unflipCards(){","    lockBoard= true;","    setTimeout(()=>{","        firstCard.classList.remove('visible');","    secondCard.classList.remove('visible');","    lockBoard =false;","    resetBoard();","},1500);","    } ","}","function resetBoard(){","    [hasFlippedCard,lockBoard]=[false,false];","    [firstCard,secondCard]=[null,null];","}","","","(function shuffle(){","    cards.forEach(card=>{","        let randomPos = Math.floor(Math.random() *12);","        card.style.order= randomPos;","    });","})();","","function play() {","        var audio = document.getElementById('audio');","        if (audio.paused) {","            audio.play();","            ('#play').removeClass('glyphicon-play-circle');","            ('#play').addClass('glyphicon-pause');","        }else{","            audio.pause();","            audio.currentTime = 0;","            ('assets/audio/game background music.mp3').addClass('glyphicon-play-circle');","            ('#play').removeClass('glyphicon-pause');","        }","    }","","document.getElementById('timer').innerHTML =","  003 + \":\" + 20;","startTimer();","","function startTimer() {","  var presentTime = document.getElementById('timer').innerHTML;","  var timeArray = presentTime.split(/[:]+/);","  var m = timeArray[0];","  var s = checkSecond((timeArray[1] - 1));","  if(s==59){m=m-1}","  //if(m<0){alert('times up')}","  ","  document.getElementById('timer').innerHTML =","   \":\" + s;","  console.log(s)","  setTimeout(startTimer, 1000);","}","","function checkSecond(sec) {","  if (sec < 10 && sec >= 0) {sec = \"0\" + sec}; // add zero in front of numbers < 10","  if (sec < 0) { \"flipCard\"};","  return sec;","}","","    ","    ","    cards.forEach(card => card.addEventListener('click',flipCard));","","","","","","","","","","",""],"id":1982}],[{"start":{"row":0,"column":0},"end":{"row":302,"column":0},"action":"remove","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   ","   ","   ","   ","   ","   const cards = document.querySelectorAll('.card');","","","let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');"," ","        ","  ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} ","    //second click","    hasFlippedCard=false;","    secondCard=this;","    ","   ","     checkForMatch();","","}","","function checkForMatch(){","  let isMatch =  firstCard.dataset.framework ===","   secondCard.dataset.framework;","   isMatch ? disablCards() : unflipCards();","   ","   ","function disablCards(){","     firstCard.removeEventListener('click', flipCard);","       secondCard.removeEventListener('click',flipCard);","        resetBoard();","}","function unflipCards(){","    lockBoard= true;","    setTimeout(()=>{","        firstCard.classList.remove('visible');","    secondCard.classList.remove('visible');","    lockBoard =false;","    resetBoard();","},1500);","    } ","}","function resetBoard(){","    [hasFlippedCard,lockBoard]=[false,false];","    [firstCard,secondCard]=[null,null];","}","","","(function shuffle(){","    cards.forEach(card=>{","        let randomPos = Math.floor(Math.random() *12);","        card.style.order= randomPos;","    });","})();","","function play() {","        var audio = document.getElementById('audio');","        if (audio.paused) {","            audio.play();","            ('#play').removeClass('glyphicon-play-circle');","            ('#play').addClass('glyphicon-pause');","        }else{","            audio.pause();","            audio.currentTime = 0;","            ('assets/audio/game background music.mp3').addClass('glyphicon-play-circle');","            ('#play').removeClass('glyphicon-pause');","        }","    }","","document.getElementById('timer').innerHTML =","  003 + \":\" + 20;","startTimer();","","function startTimer() {","  var presentTime = document.getElementById('timer').innerHTML;","  var timeArray = presentTime.split(/[:]+/);","  var m = timeArray[0];","  var s = checkSecond((timeArray[1] - 1));","  if(s==59){m=m-1}","  //if(m<0){alert('times up')}","  ","  document.getElementById('timer').innerHTML =","   \":\" + s;","  console.log(s)","  setTimeout(startTimer, 1000);","}","","function checkSecond(sec) {","  if (sec < 10 && sec >= 0) {sec = \"0\" + sec}; // add zero in front of numbers < 10","  if (sec < 0) { \"flipCard\"};","  return sec;","}","","    ","    ","    cards.forEach(card => card.addEventListener('click',flipCard));","","","","","","","","","","",""],"id":1983},{"start":{"row":0,"column":0},"end":{"row":182,"column":3},"action":"insert","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   "]}],[{"start":{"row":0,"column":0},"end":{"row":182,"column":3},"action":"remove","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   "],"id":1984},{"start":{"row":0,"column":0},"end":{"row":182,"column":3},"action":"insert","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   "]}],[{"start":{"row":156,"column":0},"end":{"row":167,"column":0},"action":"remove","lines":["if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}",""],"id":1985}],[{"start":{"row":0,"column":0},"end":{"row":171,"column":3},"action":"remove","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   "],"id":1986},{"start":{"row":0,"column":0},"end":{"row":162,"column":1},"action":"insert","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/creepy.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/match.wav');","        this.victorySound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    victory() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }","","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    victory() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}"]}],[{"start":{"row":5,"column":13},"end":{"row":5,"column":20},"action":"remove","lines":["victory"],"id":1987},{"start":{"row":5,"column":13},"end":{"row":5,"column":14},"action":"insert","lines":["w"]},{"start":{"row":5,"column":14},"end":{"row":5,"column":15},"action":"insert","lines":["i"]},{"start":{"row":5,"column":15},"end":{"row":5,"column":16},"action":"insert","lines":["n"]},{"start":{"row":5,"column":16},"end":{"row":5,"column":17},"action":"insert","lines":["n"]},{"start":{"row":5,"column":17},"end":{"row":5,"column":18},"action":"insert","lines":["e"]},{"start":{"row":5,"column":18},"end":{"row":5,"column":19},"action":"insert","lines":["r"]}],[{"start":{"row":23,"column":4},"end":{"row":23,"column":11},"action":"remove","lines":["victory"],"id":1988},{"start":{"row":23,"column":4},"end":{"row":23,"column":5},"action":"insert","lines":["w"]},{"start":{"row":23,"column":5},"end":{"row":23,"column":6},"action":"insert","lines":["i"]},{"start":{"row":23,"column":6},"end":{"row":23,"column":7},"action":"insert","lines":["n"]},{"start":{"row":23,"column":7},"end":{"row":23,"column":8},"action":"insert","lines":["n"]},{"start":{"row":23,"column":8},"end":{"row":23,"column":9},"action":"insert","lines":["e"]},{"start":{"row":23,"column":9},"end":{"row":23,"column":10},"action":"insert","lines":["r"]}],[{"start":{"row":3,"column":36},"end":{"row":3,"column":128},"action":"remove","lines":["https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav"],"id":1989},{"start":{"row":3,"column":36},"end":{"row":3,"column":65},"action":"insert","lines":["/assets/audio/Mouse-Click.mp3"]}],[{"start":{"row":3,"column":36},"end":{"row":3,"column":37},"action":"remove","lines":["/"],"id":1990}],[{"start":{"row":5,"column":38},"end":{"row":5,"column":133},"action":"remove","lines":["https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav"],"id":1991}],[{"start":{"row":5,"column":38},"end":{"row":5,"column":62},"action":"insert","lines":["/assets/audio/winner.mp3"],"id":1992}],[{"start":{"row":5,"column":38},"end":{"row":5,"column":39},"action":"remove","lines":["/"],"id":1993}],[{"start":{"row":2,"column":34},"end":{"row":2,"column":128},"action":"remove","lines":["https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/creepy.mp3"],"id":1994},{"start":{"row":2,"column":34},"end":{"row":2,"column":73},"action":"insert","lines":["/assets/audio/game background music.mp3"]}],[{"start":{"row":25,"column":14},"end":{"row":25,"column":20},"action":"remove","lines":["ictory"],"id":1995},{"start":{"row":25,"column":14},"end":{"row":25,"column":15},"action":"insert","lines":["w"]}],[{"start":{"row":25,"column":14},"end":{"row":25,"column":15},"action":"remove","lines":["w"],"id":1996},{"start":{"row":25,"column":13},"end":{"row":25,"column":14},"action":"remove","lines":["v"]}],[{"start":{"row":25,"column":13},"end":{"row":25,"column":14},"action":"insert","lines":["w"],"id":1997},{"start":{"row":25,"column":14},"end":{"row":25,"column":15},"action":"insert","lines":["i"]},{"start":{"row":25,"column":15},"end":{"row":25,"column":16},"action":"insert","lines":["n"]},{"start":{"row":25,"column":16},"end":{"row":25,"column":17},"action":"insert","lines":["n"]},{"start":{"row":25,"column":17},"end":{"row":25,"column":18},"action":"insert","lines":["w"]},{"start":{"row":25,"column":18},"end":{"row":25,"column":19},"action":"insert","lines":["e"]}],[{"start":{"row":25,"column":18},"end":{"row":25,"column":19},"action":"remove","lines":["e"],"id":1998},{"start":{"row":25,"column":17},"end":{"row":25,"column":18},"action":"remove","lines":["w"]}],[{"start":{"row":25,"column":17},"end":{"row":25,"column":18},"action":"insert","lines":["e"],"id":1999},{"start":{"row":25,"column":18},"end":{"row":25,"column":19},"action":"insert","lines":["r"]}],[{"start":{"row":13,"column":3},"end":{"row":16,"column":5},"action":"remove","lines":[" stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }"],"id":2000},{"start":{"row":23,"column":5},"end":{"row":26,"column":5},"action":"insert","lines":[" stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }"]}],[{"start":{"row":72,"column":3},"end":{"row":72,"column":11},"action":"remove","lines":[" victory"],"id":2001},{"start":{"row":72,"column":3},"end":{"row":72,"column":4},"action":"insert","lines":["w"]},{"start":{"row":72,"column":4},"end":{"row":72,"column":5},"action":"insert","lines":["i"]},{"start":{"row":72,"column":5},"end":{"row":72,"column":6},"action":"insert","lines":["n"]},{"start":{"row":72,"column":6},"end":{"row":72,"column":7},"action":"insert","lines":["n"]},{"start":{"row":72,"column":7},"end":{"row":72,"column":8},"action":"insert","lines":["e"]}],[{"start":{"row":72,"column":8},"end":{"row":72,"column":9},"action":"insert","lines":["r"],"id":2002}],[{"start":{"row":75,"column":33},"end":{"row":75,"column":40},"action":"remove","lines":["victory"],"id":2003},{"start":{"row":75,"column":33},"end":{"row":75,"column":34},"action":"insert","lines":["w"]},{"start":{"row":75,"column":34},"end":{"row":75,"column":35},"action":"insert","lines":["i"]},{"start":{"row":75,"column":35},"end":{"row":75,"column":36},"action":"insert","lines":["n"]},{"start":{"row":75,"column":36},"end":{"row":75,"column":37},"action":"insert","lines":["n"]},{"start":{"row":75,"column":37},"end":{"row":75,"column":38},"action":"insert","lines":["e"]}],[{"start":{"row":75,"column":38},"end":{"row":75,"column":39},"action":"insert","lines":["r"],"id":2004}],[{"start":{"row":112,"column":17},"end":{"row":112,"column":24},"action":"remove","lines":["victory"],"id":2005},{"start":{"row":112,"column":17},"end":{"row":112,"column":18},"action":"insert","lines":["w"]},{"start":{"row":112,"column":18},"end":{"row":112,"column":19},"action":"insert","lines":["i"]},{"start":{"row":112,"column":19},"end":{"row":112,"column":20},"action":"insert","lines":["n"]},{"start":{"row":112,"column":20},"end":{"row":112,"column":21},"action":"insert","lines":["n"]},{"start":{"row":112,"column":21},"end":{"row":112,"column":22},"action":"insert","lines":["e"]}],[{"start":{"row":112,"column":22},"end":{"row":112,"column":23},"action":"insert","lines":["r"],"id":2006}],[{"start":{"row":74,"column":29},"end":{"row":74,"column":36},"action":"remove","lines":["victory"],"id":2007},{"start":{"row":74,"column":29},"end":{"row":74,"column":35},"action":"insert","lines":["winner"]}],[{"start":{"row":7,"column":7},"end":{"row":8,"column":33},"action":"remove","lines":[" this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;"],"id":2008}],[{"start":{"row":2,"column":8},"end":{"row":2,"column":76},"action":"remove","lines":["this.bgMusic = new Audio('/assets/audio/game background music.mp3');"],"id":2009}],[{"start":{"row":9,"column":4},"end":{"row":11,"column":5},"action":"remove","lines":["startMusic() {","        this.bgMusic.play();","    }"],"id":2010}],[{"start":{"row":86,"column":0},"end":{"row":87,"column":0},"action":"insert","lines":["",""],"id":2011},{"start":{"row":87,"column":0},"end":{"row":88,"column":0},"action":"insert","lines":["",""]},{"start":{"row":88,"column":0},"end":{"row":89,"column":0},"action":"insert","lines":["",""]},{"start":{"row":89,"column":0},"end":{"row":90,"column":0},"action":"insert","lines":["",""]},{"start":{"row":90,"column":0},"end":{"row":91,"column":0},"action":"insert","lines":["",""]},{"start":{"row":91,"column":0},"end":{"row":92,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":92,"column":0},"end":{"row":111,"column":4},"action":"insert","lines":["","let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');","    ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} ","    //second click","    hasFlippedCard=false;","    secondCard=this;","    "],"id":2012}],[{"start":{"row":112,"column":12},"end":{"row":117,"column":9},"action":"remove","lines":["if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }"],"id":2013}],[{"start":{"row":113,"column":4},"end":{"row":113,"column":5},"action":"remove","lines":["}"],"id":2014}],[{"start":{"row":108,"column":4},"end":{"row":110,"column":20},"action":"remove","lines":["//second click","    hasFlippedCard=false;","    secondCard=this;"],"id":2015}],[{"start":{"row":108,"column":4},"end":{"row":108,"column":5},"action":"insert","lines":["}"],"id":2016},{"start":{"row":108,"column":0},"end":{"row":108,"column":4},"action":"remove","lines":["    "]}],[{"start":{"row":108,"column":0},"end":{"row":108,"column":1},"action":"remove","lines":["}"],"id":2017}],[{"start":{"row":109,"column":4},"end":{"row":109,"column":5},"action":"insert","lines":["{"],"id":2018},{"start":{"row":109,"column":5},"end":{"row":109,"column":6},"action":"insert","lines":["}"]}],[{"start":{"row":109,"column":5},"end":{"row":109,"column":6},"action":"remove","lines":["}"],"id":2019},{"start":{"row":109,"column":4},"end":{"row":109,"column":5},"action":"remove","lines":["{"]}],[{"start":{"row":112,"column":28},"end":{"row":112,"column":29},"action":"remove","lines":["{"],"id":2020}],[{"start":{"row":112,"column":27},"end":{"row":112,"column":28},"action":"remove","lines":[" "],"id":2021}],[{"start":{"row":112,"column":27},"end":{"row":112,"column":28},"action":"insert","lines":["{"],"id":2022}],[{"start":{"row":93,"column":0},"end":{"row":107,"column":2},"action":"remove","lines":["let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');","    ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} "],"id":2023},{"start":{"row":79,"column":5},"end":{"row":93,"column":2},"action":"insert","lines":["let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');","    ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} "]}],[{"start":{"row":79,"column":5},"end":{"row":80,"column":0},"action":"insert","lines":["",""],"id":2024},{"start":{"row":80,"column":0},"end":{"row":80,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":80,"column":4},"end":{"row":94,"column":2},"action":"remove","lines":["let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');","    ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} "],"id":2025},{"start":{"row":89,"column":0},"end":{"row":103,"column":2},"action":"insert","lines":["let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');","    ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} "]}],[{"start":{"row":81,"column":5},"end":{"row":87,"column":0},"action":"remove","lines":["lipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');",""],"id":2026},{"start":{"row":81,"column":4},"end":{"row":81,"column":5},"action":"remove","lines":["f"]}],[{"start":{"row":81,"column":0},"end":{"row":81,"column":4},"action":"remove","lines":["    "],"id":2027},{"start":{"row":80,"column":4},"end":{"row":81,"column":0},"action":"remove","lines":["",""]},{"start":{"row":80,"column":0},"end":{"row":80,"column":4},"action":"remove","lines":["    "]},{"start":{"row":79,"column":5},"end":{"row":80,"column":0},"action":"remove","lines":["",""]},{"start":{"row":79,"column":4},"end":{"row":79,"column":5},"action":"remove","lines":["}"]}],[{"start":{"row":79,"column":4},"end":{"row":79,"column":5},"action":"insert","lines":["}"],"id":2028}],[{"start":{"row":81,"column":0},"end":{"row":95,"column":2},"action":"remove","lines":["let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');","    ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} "],"id":2029},{"start":{"row":81,"column":0},"end":{"row":100,"column":4},"action":"insert","lines":["","let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');","    ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} ","    //second click","    hasFlippedCard=false;","    secondCard=this;","    "]}],[{"start":{"row":85,"column":0},"end":{"row":269,"column":3},"action":"insert","lines":["","","class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   "],"id":2030}],[{"start":{"row":0,"column":0},"end":{"row":359,"column":1},"action":"remove","lines":["class AudioController {","    constructor() {","        ","        this.flipSound = new Audio('assets/audio/Mouse-Click.mp3');","        this.matchSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/match.wav');","        this.winnerSound = new Audio('assets/audio/winner.mp3');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","       ","    }","    ","   ","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.winnerSound.play();","    } stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }","","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","   winner() {","        clearInterval(this.countdown);","        this.audioController.winner();","        document.getElementById('winner-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","","","let hasFlippedCard =false;","let lockBoard = false;","let firstCard,secondCard; ","","","class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   ","function flipCard(){","    if(lockBoard) return;","    if(this===firstCard)return;","    this.classList.add('visible');","    ","    if(!hasFlippedCard){","    //first click","    hasFlippedCard= true;","    firstCard=this;","   return ;","} ","    //second click","    hasFlippedCard=false;","    secondCard=this;","    ","","","","","","","    ","            ","    ","    checkForCardMatch(card){","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.winner();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}"],"id":2031},{"start":{"row":0,"column":0},"end":{"row":184,"column":3},"action":"insert","lines":["","","class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   "]}],[{"start":{"row":156,"column":42},"end":{"row":157,"column":0},"action":"insert","lines":["",""],"id":2032},{"start":{"row":157,"column":0},"end":{"row":157,"column":4},"action":"insert","lines":["    "]},{"start":{"row":157,"column":4},"end":{"row":158,"column":0},"action":"insert","lines":["",""]},{"start":{"row":158,"column":0},"end":{"row":158,"column":4},"action":"insert","lines":["    "]},{"start":{"row":158,"column":4},"end":{"row":158,"column":5},"action":"insert","lines":["l"]},{"start":{"row":158,"column":5},"end":{"row":158,"column":6},"action":"insert","lines":["i"]}],[{"start":{"row":158,"column":6},"end":{"row":158,"column":7},"action":"insert","lines":["n"],"id":2033},{"start":{"row":158,"column":7},"end":{"row":158,"column":8},"action":"insert","lines":["l"]}],[{"start":{"row":158,"column":8},"end":{"row":158,"column":10},"action":"insert","lines":["()"],"id":2034}],[{"start":{"row":158,"column":7},"end":{"row":158,"column":8},"action":"remove","lines":["l"],"id":2035}],[{"start":{"row":158,"column":7},"end":{"row":158,"column":8},"action":"insert","lines":["k"],"id":2036}],[{"start":{"row":158,"column":8},"end":{"row":158,"column":9},"action":"insert","lines":["s"],"id":2037}],[{"start":{"row":158,"column":11},"end":{"row":158,"column":12},"action":"insert","lines":[";"],"id":2038}],[{"start":{"row":89,"column":11},"end":{"row":90,"column":0},"action":"insert","lines":["",""],"id":2039},{"start":{"row":90,"column":0},"end":{"row":90,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":91,"column":5},"end":{"row":92,"column":0},"action":"insert","lines":["",""],"id":2040},{"start":{"row":92,"column":0},"end":{"row":92,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":84,"column":5},"end":{"row":85,"column":0},"action":"insert","lines":["",""],"id":2041},{"start":{"row":85,"column":0},"end":{"row":85,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":85,"column":4},"end":{"row":90,"column":7},"action":"insert","lines":[" if (tilesFlipped === Cards.length) {","    stopTime();","    $('.modal').css('display','block');","    }     ","    }","    });"],"id":2042}],[{"start":{"row":85,"column":13},"end":{"row":85,"column":14},"action":"remove","lines":["s"],"id":2043},{"start":{"row":85,"column":12},"end":{"row":85,"column":13},"action":"remove","lines":["e"]},{"start":{"row":85,"column":11},"end":{"row":85,"column":12},"action":"remove","lines":["l"]},{"start":{"row":85,"column":10},"end":{"row":85,"column":11},"action":"remove","lines":["i"]},{"start":{"row":85,"column":9},"end":{"row":85,"column":10},"action":"remove","lines":["t"]}],[{"start":{"row":85,"column":9},"end":{"row":85,"column":10},"action":"insert","lines":["c"],"id":2044},{"start":{"row":85,"column":10},"end":{"row":85,"column":11},"action":"insert","lines":["a"]},{"start":{"row":85,"column":11},"end":{"row":85,"column":12},"action":"insert","lines":["r"]},{"start":{"row":85,"column":12},"end":{"row":85,"column":13},"action":"insert","lines":["d"]}],[{"start":{"row":85,"column":13},"end":{"row":85,"column":14},"action":"insert","lines":["s"],"id":2045}],[{"start":{"row":85,"column":24},"end":{"row":85,"column":25},"action":"remove","lines":["="],"id":2046},{"start":{"row":85,"column":23},"end":{"row":85,"column":24},"action":"remove","lines":["="]},{"start":{"row":85,"column":22},"end":{"row":85,"column":23},"action":"remove","lines":["="]}],[{"start":{"row":85,"column":22},"end":{"row":85,"column":23},"action":"insert","lines":[":"],"id":2047}],[{"start":{"row":85,"column":22},"end":{"row":85,"column":23},"action":"remove","lines":[":"],"id":2048},{"start":{"row":85,"column":21},"end":{"row":85,"column":22},"action":"remove","lines":[" "]}],[{"start":{"row":85,"column":21},"end":{"row":85,"column":22},"action":"insert","lines":["="],"id":2049}],[{"start":{"row":90,"column":6},"end":{"row":90,"column":7},"action":"remove","lines":[";"],"id":2050},{"start":{"row":90,"column":5},"end":{"row":90,"column":6},"action":"remove","lines":[")"]},{"start":{"row":90,"column":4},"end":{"row":90,"column":5},"action":"remove","lines":["}"]}],[{"start":{"row":90,"column":4},"end":{"row":90,"column":5},"action":"insert","lines":[";"],"id":2051}],[{"start":{"row":90,"column":4},"end":{"row":90,"column":5},"action":"remove","lines":[";"],"id":2052}],[{"start":{"row":90,"column":4},"end":{"row":90,"column":5},"action":"insert","lines":["}"],"id":2053}],[{"start":{"row":90,"column":4},"end":{"row":90,"column":5},"action":"remove","lines":["}"],"id":2054}],[{"start":{"row":85,"column":4},"end":{"row":89,"column":5},"action":"remove","lines":[" if (cardsFlipped= Cards.length) {","    stopTime();","    $('.modal').css('display','block');","    }     ","    }"],"id":2055}],[{"start":{"row":85,"column":4},"end":{"row":85,"column":41},"action":"insert","lines":[" if (cardsFlipped === Cards.length) {"],"id":2056},{"start":{"row":86,"column":4},"end":{"row":90,"column":7},"action":"insert","lines":["stopTime();","    $('.modal').css('display','block');","    }     ","    }","    });"]}],[{"start":{"row":85,"column":4},"end":{"row":97,"column":5},"action":"remove","lines":[" if (cardsFlipped === Cards.length) {","    stopTime();","    $('.modal').css('display','block');","    }     ","    }","    });","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","        ","    }"],"id":2057}],[{"start":{"row":87,"column":4},"end":{"row":100,"column":5},"action":"remove","lines":["flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }"],"id":2058},{"start":{"row":87,"column":4},"end":{"row":100,"column":0},"action":"insert","lines":["function shuffle(array) {","    var currentIndex = array.length, temporaryValue, randomIndex;","","    while (currentIndex !== 0) {","        randomIndex = Math.floor(Math.random() * currentIndex);","        currentIndex -= 1;","        temporaryValue = array[currentIndex];","        array[currentIndex] = array[randomIndex];","        array[randomIndex] = temporaryValue;","    }","    return array;","}","",""]}],[{"start":{"row":87,"column":3},"end":{"row":99,"column":0},"action":"remove","lines":[" function shuffle(array) {","    var currentIndex = array.length, temporaryValue, randomIndex;","","    while (currentIndex !== 0) {","        randomIndex = Math.floor(Math.random() * currentIndex);","        currentIndex -= 1;","        temporaryValue = array[currentIndex];","        array[currentIndex] = array[randomIndex];","        array[randomIndex] = temporaryValue;","    }","    return array;","}",""],"id":2059}],[{"start":{"row":114,"column":4},"end":{"row":122,"column":5},"action":"remove","lines":["shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }"],"id":2060},{"start":{"row":114,"column":4},"end":{"row":127,"column":0},"action":"insert","lines":["function shuffle(array) {","    var currentIndex = array.length, temporaryValue, randomIndex;","","    while (currentIndex !== 0) {","        randomIndex = Math.floor(Math.random() * currentIndex);","        currentIndex -= 1;","        temporaryValue = array[currentIndex];","        array[currentIndex] = array[randomIndex];","        array[randomIndex] = temporaryValue;","    }","    return array;","}","",""]}],[{"start":{"row":114,"column":3},"end":{"row":114,"column":12},"action":"remove","lines":[" function"],"id":2061}],[{"start":{"row":175,"column":3},"end":{"row":181,"column":42},"action":"insert","lines":["//TIMER","let sec = 0;","function myInterval() {","  sec++;","  document.getElementById('secondsElapsed').textContent = sec;","}","let timer = setInterval(myInterval, 1000);"],"id":2062}],[{"start":{"row":175,"column":3},"end":{"row":175,"column":10},"action":"remove","lines":["//TIMER"],"id":2063}],[{"start":{"row":181,"column":24},"end":{"row":181,"column":34},"action":"remove","lines":["myInterval"],"id":2064},{"start":{"row":181,"column":24},"end":{"row":181,"column":38},"action":"insert","lines":["time-remaining"]}],[{"start":{"row":181,"column":37},"end":{"row":181,"column":38},"action":"remove","lines":["g"],"id":2065}],[{"start":{"row":181,"column":9},"end":{"row":181,"column":10},"action":"remove","lines":[" "],"id":2066},{"start":{"row":181,"column":8},"end":{"row":181,"column":9},"action":"remove","lines":["r"]}],[{"start":{"row":181,"column":35},"end":{"row":181,"column":36},"action":"insert","lines":["g"],"id":2067}],[{"start":{"row":0,"column":0},"end":{"row":181,"column":44},"action":"remove","lines":["","","class AudioController {","    constructor() {","        this.bgMusic = new Audio('assets/audio/game background music.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('assets/audio/game background music.mp3');","        this.winnerSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    winner() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","","","","","","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }"," ","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    winner() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    ","    ","   ","","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffle(array) {","    var currentIndex = array.length, temporaryValue, randomIndex;","","    while (currentIndex !== 0) {","        randomIndex = Math.floor(Math.random() * currentIndex);","        currentIndex -= 1;","        temporaryValue = array[currentIndex];","        array[currentIndex] = array[randomIndex];","        array[randomIndex] = temporaryValue;","    }","    return array;","}","","","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","    ","    links();","    ","if (links==\"easy\"){"," (\"div.easy\").show();","}","","if (links==\"medium\"){"," (\"div.medium\").show();","}","","if (document.getElementById==\"hard\"){"," (\"div.hard\").show();","}","","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}","   ","let sec = 0;","function myInterval() {","  sec++;","  document.getElementById('secondsElapsed').textContent = sec;","}","let time= setInterval(time-remaining, 1000);"],"id":2068},{"start":{"row":0,"column":0},"end":{"row":162,"column":1},"action":"insert","lines":["class AudioController {","    constructor() {","        this.bgMusic = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/creepy.mp3');","        this.flipSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/flip.wav');","        this.matchSound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/match.wav');","        this.victorySound = new Audio('https://raw.githubusercontent.com/WebDevSimplified/Mix-Or-Match/master/Assets/Audio/victory.wav');","        this.gameOverSound = new Audio('Assets/Audio/gameOver.wav');","        this.bgMusic.volume = 0.5;","        this.bgMusic.loop = true;","    }","    startMusic() {","        this.bgMusic.play();","    }","    stopMusic() {","        this.bgMusic.pause();","        this.bgMusic.currentTime = 0;","    }","    flip() {","        this.flipSound.play();","    }","    match() {","        this.matchSound.play();","    }","    victory() {","        this.stopMusic();","        this.victorySound.play();","    }","    gameOver() {","        this.stopMusic();","        this.gameOverSound.play();","    }","}","","class MixOrMatch {","    constructor(totalTime, cards) {","        this.cardsArray = cards;","        this.totalTime = totalTime;","        this.timeRemaining = totalTime;","        this.timer = document.getElementById('time-remaining')","        this.ticker = document.getElementById('flips');","        this.audioController = new AudioController();","    }","","    startGame() {","        this.totalClicks = 0;","        this.timeRemaining = this.totalTime;","        this.cardToCheck = null;","        this.matchedCards = [];","        this.busy = true;","        setTimeout(() => {","            this.audioController.startMusic();","            this.shuffleCards(this.cardsArray);","            this.countdown = this.startCountdown();","            this.busy = false;","        }, 500)","        this.hideCards();","        this.timer.innerText = this.timeRemaining;","        this.ticker.innerText = this.totalClicks;","    }","    startCountdown() {","        return setInterval(() => {","            this.timeRemaining--;","            this.timer.innerText = this.timeRemaining;","            if(this.timeRemaining === 0)","                this.gameOver();","        }, 1000);","    }","    gameOver() {","        clearInterval(this.countdown);","        this.audioController.gameOver();","        document.getElementById('game-over-text').classList.add('visible');","    }","    victory() {","        clearInterval(this.countdown);","        this.audioController.victory();","        document.getElementById('victory-text').classList.add('visible');","    }","    hideCards() {","        this.cardsArray.forEach(card => {","            card.classList.remove('visible');","            card.classList.remove('matched');","        });","    }","    flipCard(card) {","        if(this.canFlipCard(card)) {","            this.audioController.flip();","            this.totalClicks++;","            this.ticker.innerText = this.totalClicks;","            card.classList.add('visible');","","            if(this.cardToCheck) {","                this.checkForCardMatch(card);","            } else {","                this.cardToCheck = card;","            }","        }","    }","    checkForCardMatch(card) {","        if(this.getCardType(card) === this.getCardType(this.cardToCheck))","            this.cardMatch(card, this.cardToCheck);","        else ","            this.cardMismatch(card, this.cardToCheck);","","        this.cardToCheck = null;","    }","    cardMatch(card1, card2) {","        this.matchedCards.push(card1);","        this.matchedCards.push(card2);","        card1.classList.add('matched');","        card2.classList.add('matched');","        this.audioController.match();","        if(this.matchedCards.length === this.cardsArray.length)","            this.victory();","    }","    cardMismatch(card1, card2) {","        this.busy = true;","        setTimeout(() => {","            card1.classList.remove('visible');","            card2.classList.remove('visible');","            this.busy = false;","        }, 1000);","    }","    shuffleCards(cardsArray) {","        for (let i = cardsArray.length - 1; i > 0; i--) {","            const randIndex = Math.floor(Math.random() * (i + 1));","            [cardsArray[i], cardsArray[randIndex]] = [cardsArray[randIndex], cardsArray[i]];","        }","        cardsArray = cardsArray.map((card, index) => {","            card.style.order = index;","        });","    }","    getCardType(card) {","        return card.getElementsByClassName('card-value')[0].src;","    }","    canFlipCard(card) {","        return !this.busy && !this.matchedCards.includes(card) && card !== this.cardToCheck;","    }","}","","if (document.readyState == 'loading') {","    document.addEventListener('DOMContentLoaded', ready)","} else {","    ready()","}","","function ready() {","    let overlays = Array.from(document.getElementsByClassName('overlay-text'));","    let cards = Array.from(document.getElementsByClassName('card'));","    let game = new MixOrMatch(100, cards);","","    overlays.forEach(overlay => {","        overlay.addEventListener('click', () => {","            overlay.classList.remove('visible');","            game.startGame();","        });","    });","","    cards.forEach(card => {","        card.addEventListener('click', () => {","            game.flipCard(card);","        });","    });","}"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":30,"column":5},"end":{"row":30,"column":5},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":67,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1577734881086,"hash":"c7cac0c4842554e01b51073bbe9d48de9b37a45f"}